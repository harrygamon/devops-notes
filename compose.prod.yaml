services:
  # Frontend web application (production)
  devops-notes:
    container_name: devops-notes-prod
    image: ghcr.io/${GITHUB_REPOSITORY:-your-username/electron-devops-notes}-web:latest
    ports:
      - "80:80"
    restart: unless-stopped
    init: true
    environment:
      - NODE_ENV=production
    volumes:
      - ./.htpasswd:/etc/nginx/.htpasswd:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/cache/nginx:uid=101,gid=101
      - /var/cache/nginx/client_temp:uid=101,gid=101
      - /var/cache/nginx/proxy_temp:uid=101,gid=101
      - /var/cache/nginx/fastcgi_temp:uid=101,gid=101
      - /var/cache/nginx/uwsgi_temp:uid=101,gid=101
      - /var/cache/nginx/scgi_temp:uid=101,gid=101
      - /var/run:uid=101,gid=101
      - /run:uid=101,gid=101

  # Backend API server (production)
  backend:
    container_name: devops-notes-backend-prod
    image: ghcr.io/${GITHUB_REPOSITORY:-your-username/electron-devops-notes}-backend:latest
    ports:
      - "3001:3001"
    restart: unless-stopped
    init: true
    environment:
      - NODE_ENV=production
      - PORT=3001
      - OLLAMA_API_URL=http://host.docker.internal:11434/api/generate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    profiles:
      - production

  # Ollama AI model server (commented out, use host Ollama instead)
  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: ollama
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama-data:/root/.ollama
  #   restart: unless-stopped
  #   networks:
  #     - default
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 2G
  #         cpus: '2.0'
  #       reservations:
  #         memory: 1G
  #         cpus: '1.0'

  # Production reverse proxy with SSL support
  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/certs:/etc/nginx/certs:ro
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - ./nginx-proxy/html:/etc/nginx/html
      - ./nginx-proxy/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      devops-notes:
        condition: service_healthy
    profiles:
      - production
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # SSL certificate management with Let's Encrypt
  nginx-proxy-acme:
    image: nginxproxy/acme-companion:latest
    container_name: nginx-proxy-acme-prod
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx-proxy/acme:/etc/nginx/certs:rw
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL:-your-email@example.com}
    depends_on:
      - nginx-proxy
    profiles:
      - production
    restart: unless-stopped

volumes:
  # ollama-data:

networks:
  default:
    name: devops-notes-network-prod
    driver: bridge 